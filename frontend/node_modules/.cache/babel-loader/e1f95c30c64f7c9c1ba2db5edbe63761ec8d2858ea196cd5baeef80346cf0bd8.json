{"ast":null,"code":"import api from './api';\nexport const courseService = {\n  // Obtenir tous les cours\n  getCourses: async (params = {}) => {\n    const queryString = new URLSearchParams(params).toString();\n    return await api.get(`/courses?${queryString}`);\n  },\n  // Obtenir un cours spécifique\n  getCourse: async id => {\n    return await api.get(`/courses/${id}`);\n  },\n  // Obtenir le contenu complet d'un cours\n  getCourseContent: async id => {\n    return await api.get(`/courses/${id}/content`);\n  },\n  // Créer un cours\n  createCourse: async courseData => {\n    return await api.post('/courses', courseData);\n  },\n  // Mettre à jour un cours\n  updateCourse: async (id, courseData) => {\n    return await api.put(`/courses/${id}`, courseData);\n  },\n  // S'inscrire à un cours\n  enrollCourse: async id => {\n    return await api.post(`/courses/${id}/enroll`);\n  },\n  // Mettre à jour la progression\n  updateProgress: async (id, progression) => {\n    return await api.put(`/courses/${id}/progress`, {\n      progression\n    });\n  },\n  // Supprimer un cours\n  deleteCourse: async id => {\n    return await api.delete(`/courses/${id}`);\n  }\n};","map":{"version":3,"names":["api","courseService","getCourses","params","queryString","URLSearchParams","toString","get","getCourse","id","getCourseContent","createCourse","courseData","post","updateCourse","put","enrollCourse","updateProgress","progression","deleteCourse","delete"],"sources":["C:/Users/Dali_bnslh/Desktop/Final plat/frontend/src/services/courseService.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const courseService = {\r\n  // Obtenir tous les cours\r\n  getCourses: async (params = {}) => {\r\n    const queryString = new URLSearchParams(params).toString();\r\n    return await api.get(`/courses?${queryString}`);\r\n  },\r\n\r\n  // Obtenir un cours spécifique\r\n  getCourse: async (id) => {\r\n    return await api.get(`/courses/${id}`);\r\n  },\r\n\r\n  // Obtenir le contenu complet d'un cours\r\n  getCourseContent: async (id) => {\r\n    return await api.get(`/courses/${id}/content`);\r\n  },\r\n\r\n  // Créer un cours\r\n  createCourse: async (courseData) => {\r\n    return await api.post('/courses', courseData);\r\n  },\r\n\r\n  // Mettre à jour un cours\r\n  updateCourse: async (id, courseData) => {\r\n    return await api.put(`/courses/${id}`, courseData);\r\n  },\r\n\r\n  // S'inscrire à un cours\r\n  enrollCourse: async (id) => {\r\n    return await api.post(`/courses/${id}/enroll`);\r\n  },\r\n\r\n  // Mettre à jour la progression\r\n  updateProgress: async (id, progression) => {\r\n    return await api.put(`/courses/${id}/progress`, { progression });\r\n  },\r\n\r\n  // Supprimer un cours\r\n  deleteCourse: async (id) => {\r\n    return await api.delete(`/courses/${id}`);\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,aAAa,GAAG;EAC3B;EACAC,UAAU,EAAE,MAAAA,CAAOC,MAAM,GAAG,CAAC,CAAC,KAAK;IACjC,MAAMC,WAAW,GAAG,IAAIC,eAAe,CAACF,MAAM,CAAC,CAACG,QAAQ,CAAC,CAAC;IAC1D,OAAO,MAAMN,GAAG,CAACO,GAAG,CAAC,YAAYH,WAAW,EAAE,CAAC;EACjD,CAAC;EAED;EACAI,SAAS,EAAE,MAAOC,EAAE,IAAK;IACvB,OAAO,MAAMT,GAAG,CAACO,GAAG,CAAC,YAAYE,EAAE,EAAE,CAAC;EACxC,CAAC;EAED;EACAC,gBAAgB,EAAE,MAAOD,EAAE,IAAK;IAC9B,OAAO,MAAMT,GAAG,CAACO,GAAG,CAAC,YAAYE,EAAE,UAAU,CAAC;EAChD,CAAC;EAED;EACAE,YAAY,EAAE,MAAOC,UAAU,IAAK;IAClC,OAAO,MAAMZ,GAAG,CAACa,IAAI,CAAC,UAAU,EAAED,UAAU,CAAC;EAC/C,CAAC;EAED;EACAE,YAAY,EAAE,MAAAA,CAAOL,EAAE,EAAEG,UAAU,KAAK;IACtC,OAAO,MAAMZ,GAAG,CAACe,GAAG,CAAC,YAAYN,EAAE,EAAE,EAAEG,UAAU,CAAC;EACpD,CAAC;EAED;EACAI,YAAY,EAAE,MAAOP,EAAE,IAAK;IAC1B,OAAO,MAAMT,GAAG,CAACa,IAAI,CAAC,YAAYJ,EAAE,SAAS,CAAC;EAChD,CAAC;EAED;EACAQ,cAAc,EAAE,MAAAA,CAAOR,EAAE,EAAES,WAAW,KAAK;IACzC,OAAO,MAAMlB,GAAG,CAACe,GAAG,CAAC,YAAYN,EAAE,WAAW,EAAE;MAAES;IAAY,CAAC,CAAC;EAClE,CAAC;EAED;EACAC,YAAY,EAAE,MAAOV,EAAE,IAAK;IAC1B,OAAO,MAAMT,GAAG,CAACoB,MAAM,CAAC,YAAYX,EAAE,EAAE,CAAC;EAC3C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}